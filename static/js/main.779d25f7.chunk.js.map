{"version":3,"sources":["Header.js","Circles.js","Backdrop.js","Centerpiece.js","App.js","serviceWorker.js","index.js"],"names":["Header","setMenu","setNavigation","setPrevious","location","useLocation","pathname","changeNavigation","newstate","a","substring","className","onClick","to","CirclesHome","previous","navigation","href","CirclesMenu","menu","changeMenu","CirclesFindUs","withRouter","TransitionGroup","CSSTransition","key","timeout","enter","exit","classNames","exact","path","BackdropHome","BackdropMenu","TheMenu","toUpperCase","map","food","BackdropFindUs","class","src","frameborder","Centerpiece","App","useState","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.779d25f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Styles/Header.css';\r\nimport {Link,useLocation} from 'react-router-dom';\r\n\r\nfunction Header ({setMenu,setNavigation, setPrevious}) {\r\n\r\n    const location = useLocation().pathname;\r\n    \r\n    async function changeNavigation (newstate) {\r\n\r\n        if(location!=='/'){\r\n            await setPrevious(location.substring(1));\r\n        }\r\n        else {\r\n            await setPrevious('home');\r\n        }\r\n\r\n        await setNavigation(newstate);\r\n\r\n        if(newstate==='menu'){\r\n            await setMenu('starters');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='header'>\r\n            <div className='logo-div'>\r\n                    <Link onClick={()=>changeNavigation('home')} to='/' className=\"logo\">\r\n                        <p className='name'>Sky</p>\r\n                        <p className='type'>Cafe &<br/>Restaurant</p>\r\n                    </Link>\r\n\r\n            </div>\r\n            <nav className='nav-bar'>\r\n                <Link to='/menu'>\r\n                    <p onClick={()=>changeNavigation('menu')}>Menu</p>\r\n                </Link>\r\n                <Link to='/gallery'>\r\n                    <p onClick={()=>changeNavigation('gallery')}>Gallery</p>\r\n                </Link>\r\n                <Link to='/findus'>\r\n                    <p onClick={()=>changeNavigation('findus')}>Find Us</p>\r\n                </Link>\r\n                <Link to='/about'>\r\n                    <p  onClick={()=>changeNavigation('about')}>About</p>\r\n                </Link>\r\n                \r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Styles/Circles.css';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\r\n\r\nfunction Circles ({previous,menu,setMenu,navigation,location}) {\r\n\r\n    return (\r\n        <TransitionGroup>\r\n            <CSSTransition\r\n                key={location.key}\r\n                timeout={{\r\n                    enter: 100,\r\n                    exit: 100\r\n                }}\r\n                classNames='circle-change'\r\n            >\r\n                <Switch location={location}>\r\n                    <Route exact path='/'>\r\n                        <CirclesHome navigation={navigation} previous={previous} />\r\n                    </Route>\r\n                    <Route exact path='/menu' >\r\n                            <CirclesMenu menu={menu} setMenu={setMenu} navigation={navigation} previous={previous} />\r\n                    </Route>\r\n                    <Route exact path='/findus' >\r\n                            <CirclesFindUs navigation={navigation} previous={previous} />\r\n                    </Route>\r\n                </Switch>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nfunction CirclesHome ({previous,navigation}) {\r\n    return (\r\n        <div className={`n1st-circle ${navigation==='home' && previous!=='home' ? 'take-to-center' : 'circle-center'}`}>\r\n            <div className=\"n2nd-circle\">\r\n                <div className=\"n3rd-circle\">\r\n                    <div className=\"n4th-circle\">\r\n                        <div className=\"n5th-circle\">\r\n                            <div className=\"n6th-circle\">\r\n                                <p>Don't wait until<br/>Friday</p>\r\n                                <a className='n7th-circle' href=\"#\">\r\n                                    <p>Reserve<br/>NOW</p>\r\n                                </a>\r\n                                <a href=\"#\">Compare dates</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CirclesMenu ({previous,menu,setMenu,navigation}) {\r\n\r\n    function changeMenu (newstate) {\r\n        setMenu(newstate);\r\n    }\r\n    return (\r\n        <div className={`n1st-circle ${navigation==='menu' && previous==='home' ? 'take-to-left' : 'circle-left'}`}>\r\n            <div className=\"n2nd-circle \">\r\n                <div className=\"n3rd-circle n3rd-circle-menu\">\r\n                    <div className = {`menu-container ${menu}-whitebg`}>\r\n                        <p onClick={()=>changeMenu('starters')} className={`starters ${menu==='starters' ? 'active-color' : \"\"}`}>Starters</p>\r\n                        <p onClick={()=>changeMenu('salads')} className={`salads ${menu==='salads' ? 'active-color' : \"\"}`}>Salads</p>\r\n                        <p onClick={()=>changeMenu('main')} className={`main ${menu==='main' ? 'active-color' : \"\"}`}>Main</p>\r\n                        <p onClick={()=>changeMenu('vegan')} className={`vegan ${menu==='vegan' ? 'active-color' : \"\"}`}>Vegan</p>\r\n                        <p onClick={()=>changeMenu('desserts')} className={`desserts ${menu==='desserts' ? 'active-color' : \"\"}`}>Desserts</p>\r\n                        <p onClick={()=>changeMenu('drinks')} className={`drinks ${menu==='drinks' ? 'active-color' : \"\"}`}>Drinks</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CirclesFindUs ({previous,navigation}) {\r\n    return (\r\n        <div className={`n1st-circle ${navigation==='findus' && previous==='home' ? 'take-to-left' : 'circle-left'}`}>\r\n            <div className=\"n2nd-circle \">\r\n                <div className=\"n3rd-circle n3rd-circle-findus\">\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Circles);","import React from 'react';\r\nimport './Styles/Backdrop.css';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\r\n\r\nfunction Backdrop ({previous,navigation,location, menu}) {\r\n    return (\r\n        <TransitionGroup className='backdrop-parent'>\r\n            <CSSTransition\r\n                key={location.key}\r\n                timeout={{\r\n                    enter: 500,\r\n                    exit: 500\r\n                }}\r\n                classNames='backdrop-change'\r\n            >\r\n                <section className='backdrop-single'>\r\n                    <Switch location={location}>\r\n                        <Route exact path='/'>\r\n                            <BackdropHome />\r\n                        </Route>\r\n                        <Route path='/menu'>\r\n                            <BackdropMenu navigation={navigation} menu={menu} previous={previous}/>\r\n                        </Route>\r\n                        <Route path='/findus'>\r\n                            <BackdropFindUs navigation={navigation} previous={previous}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </section>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nfunction BackdropHome () {\r\n    return (\r\n        <div className='backdrop'>\r\n            <div className='left-pic'>\r\n            </div>\r\n            <div className='right-pic'>\r\n            </div>\r\n            <div className=\"color-shade\">\r\n                <p>Get together under<br/>one sky</p>\r\n                <p>Sky high conversations<br/>start here</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction BackdropMenu ({navigation, menu, previous}){\r\n    return (\r\n        <div className='backdrop backdrop-menu'>\r\n            <div className={`menu-list ${navigation==='menu' && previous==='home' ? 'menu-list-appear' : ''}`}>\r\n                <TheMenu menu={menu} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TheMenu ({menu}) {\r\n\r\n    const food_list = {\r\n    'starters': ['Lobster Rolls','Beef Tataki','Lobster Tempura','Corvina Tiradito','Ribs & Chips','Seared Foie Gras','Wild Mushrooms'],\r\n    'salads': ['Grilled Chicke','Club Life','Italian Morning','Grilled Tirapila','Stuffed Tomato'],\r\n    'main': ['Beer Battered Haddock','Pan Fried Fillet','Seared Scallops','Fresh Dressed Crab','Thai Green Noodle'],\r\n    'vegan': ['Yellow Dal Tadka','Aldo Sabzi','Fennel Pollin','Fried Mushrooms','Soya Curd'],\r\n    'desserts': ['Maple Bread Pudding','Carrot Cake','Chocolate Cheesecake','Wilcox Icecream','Brownie Sundae'],\r\n    'drinks': ['Coca-Cola','Fanta','Sprite','Tea','Latte','Cappucino','Hot Chocolate']\r\n    }\r\n    return(\r\n        <div className=\"the-menu\">\r\n            <h2 className='menu-header'>{`${menu[0].toUpperCase()+menu.substring(1)}`}</h2>\r\n            {food_list[menu].map(food => {\r\n                return (\r\n                    <div className='the-food'>\r\n                        <p>{food}</p>\r\n                        <div className='under-line'></div>\r\n                        <p>$5</p>\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction BackdropFindUs ({navigation,previous}) {\r\n    return (\r\n        <div className='backdrop backdrop-findus'>\r\n            <div className={`findus-white ${navigation==='findus' && previous==='home' ? 'menu-list-appear' : ''}`}>\r\n                <div className=\"contact\">\r\n                    <h2>Call Us</h2>\r\n                    <a href=\"tel: +00000000\"><i class=\"fas fa-phone-alt\"></i>+994 55 000 00 00</a>\r\n                    <a href=\"tel: +00000000\"><i class=\"fas fa-phone-alt\"></i>+994 77 000 00 00</a>\r\n                    <h2>Email Us</h2>\r\n                    <a href=\"mailto: skycafe@example.com\"><i class=\"fas fa-envelope\"></i>skycafe@example.com</a>\r\n                </div>\r\n                <div className=\"map\">\r\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d194472.674775229!2d49.71487495796301!3d40.394769469930296!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40307d6bd6211cf9%3A0x343f6b5e7ae56c6b!2sBaku%2C%20Azerbaijan!5e0!3m2!1sen!2s!4v1602354806452!5m2!1sen!2s\" frameborder=\"0\" ></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Backdrop);","import React from 'react';\r\nimport './Styles/Centerpiece.css';\r\nimport Circles from './Circles';\r\nimport Backdrop from './Backdrop';\r\n\r\nfunction Centerpiece ({previous,navigation,menu,setMenu}) {\r\n    return (\r\n        <div className='centerpiece'>\r\n            <Backdrop previous={previous} navigation={navigation} menu={menu}/>\r\n            <Circles previous={previous} menu={menu} setMenu={setMenu} navigation={navigation} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Centerpiece;","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Centerpiece from './Centerpiece';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nfunction App() {\n\n  const [navigation, setNavigation] = useState('unchanged');\n  const [previous, setPrevious] = useState('unchanged');\n  const [menu,setMenu] = useState('starters');\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header setMenu={setMenu} navigation={navigation} setNavigation={setNavigation} setPrevious={setPrevious} previous={previous} />\n        <Centerpiece previous={previous} navigation={navigation} menu={menu} setMenu={setMenu} setNavigation={setNavigation}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}